%% Clear
clear all;
tic;
%path = "../yaleExpCropped";% Cropped face
%m = 50;
%n=52;
path = "../Yale_Database/"; % Full face
m = 195;
n = 231;
function [accuracy_top30,accuracy_30] = 
num_persons = 15;
img_per_person = 11;
N = 15*11;
images = dir(path);
count = 0;
V_top30 = zeros([m*n,30]);
V_30 = zeros([m*n,30]);
correct_recog_top30 = 0;
correct_recog_30 = 0;
for i = 1:1:num_persons
    for j = 1:1:img_per_person
        X_train = zeros([m*n,(img_per_person*num_persons)-1]);
        count=count+1;
        lambda = 0;
        for k=1:(num_persons*img_per_person)
            if(count~=k)
                lambda = lambda+1;
                X_train(:,lambda) = im2double(reshape(imread(path+"/"+images(k+2).name),[(m*n),1]));
            end
        end
        mean = sum(X_train,2)/((img_per_person*num_persons)-1);
        X_train = X_train - mean;
        L = X_train'*X_train/((img_per_person*num_persons)-2);
        [U,S,~] = svd(L);
        V = X_train*U;
        normv = sqrt(sum(V.^2,1));
        V = bsxfun(@rdivide,V,normv);
        V_top30 = V(:,1:30);
        V_30 = V(:,4:33);
        
        Testimg = im2double(reshape(imread(path+"/"+images(count+2).name),[(m*n),1]));
        distance = zeros([num_persons,1]);
        Testimg = Testimg - mean;
        Alpha_ik = V_top30'*X_train;
        Alpha_p = V_top30'*Testimg;
        Alpha_ik1 = V_30'*X_train;
        Alpha_p1 = V_30'*Testimg;
        [~,Identity] = min(sum((Alpha_ik-Alpha_p).^2));
        if(Identity<count)
            Identity = ceil(Identity/img_per_person);
        else
            Identity = ceil((Identity+1)/img_per_person);
        end
        if(Identity == ceil(count/img_per_person))
            correct_recog_top30 = correct_recog_top30 + 1;
        end
        [~,Identity] = min(sum((Alpha_ik1-Alpha_p1).^2));
        if(Identity<count)
            Identity = ceil(Identity/img_per_person);
        else
            Identity = ceil((Identity+1)/img_per_person);
        end
        if(Identity == ceil(count/img_per_person))
            correct_recog_30 = correct_recog_30 + 1;
        end
    end
end
accuracy_top30 = correct_recog_top30/N;
accuracy_30 = correct_recog_30/N;
end
toc;